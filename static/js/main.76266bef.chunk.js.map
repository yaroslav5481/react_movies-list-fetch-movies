{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","url","imgUrl","className","src","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","query","setQuery","findMovie","setFindMovie","loading","setLoading","errorMessage","setErrorMessage","reset","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","fetch","then","res","json","catch","Response","Error","getMovie","newMovie","Title","Plot","Poster","imdbID","finally","find","App","ReactDOM","render","document","getElementById"],"mappings":"uTAQaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAErCC,EAAuB,QAAjBD,EAAME,OADH,4DAGXF,EAAME,OAEV,OACE,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDH,EAAMM,aAI1D,sBAAKH,UAAU,UAAU,UAAQ,mBAAjC,UACGH,EAAMO,YACP,uBACA,mBAAGC,KAAMR,EAAMS,QAAS,UAAQ,WAAhC,4BCjCGC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKR,UAAU,SAAf,SACGQ,EAAOC,KAAI,SAAAZ,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMa,c,+BCFZ,IAAMC,EAA6B,SAAC,GAEpC,IADLH,EACI,EADJA,OAAQI,EACJ,EADIA,UAER,EAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAuB,MAAzD,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KA6BMC,EAAQ,WACZP,EAAS,IACTE,EAAa,OAkBf,OACE,qCACE,uBACEjB,UAAU,aACVuB,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAF3B,UAIE,sBAAKzB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ0B,QAAQ,cAAjC,yBAIA,qBAAK1B,UAAU,UAAf,SACE,uBACE,UAAQ,aACR2B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7B,UAAW8B,IACT,QACA,CAAE,YAAaV,IAEjBW,MAAOjB,EACPkB,SAAU,SAAAR,GACRT,EAASS,EAAMS,OAAOF,OACtBV,GAAgB,QAKrBD,GACC,mBAAGpB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR2B,KAAK,SACL3B,UAAW8B,IACT,kBACA,CAAE,aAAcZ,IAElBgB,SAAoB,KAAVpB,EACVqB,QA7FQ,SAClBX,GAEAA,EAAMC,iBACNN,GAAW,GCnBR,SAAkBL,GACvB,OAAOsB,MAAM,GAAD,OAHE,sDAGF,cAAiBtB,IAC1BuB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDgBTC,CAAS7B,GACNuB,MAAK,SAAAC,GACJ,GAAI,UAAWA,EACbjB,GAAgB,OADlB,CAMA,IAAMuB,EAAkB,CACtBzC,MAAOmC,EAAIO,MACXzC,YAAakC,EAAIQ,KACjB/C,OAAQuC,EAAIS,OACZzC,QAAQ,8BAAD,OAAgCgC,EAAIU,QAC3CtC,OAAQ4B,EAAIU,QAGd/B,EAAa2B,OAEdK,SAAQ,kBAAM9B,GAAW,OA6DpB,SAUIH,EAGA,eAFA,mBAOLA,GACC,qBAAKhB,UAAU,UAAf,SACE,wBACE,UAAQ,YACR2B,KAAK,SACL3B,UAAU,oBACVmC,QA7EG,WACVnB,IAIDR,EAAO0C,MAAK,SAAArD,GAAK,OAAIA,EAAMa,SAAWM,EAAUN,WAMpDE,EAAU,GAAD,mBAAKJ,GAAL,CAAaQ,KALpBM,MAmEQ,qCAaO,OAAdN,GACC,sBAAKhB,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWH,MAAOmB,WEvIfmC,EAAM,WACjB,MAA4BtC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeI,EAAf,KAEA,OACE,sBAAKZ,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEQ,OAAQA,MAIZ,qBAAKR,UAAU,UAAf,SACE,cAAC,EAAD,CACEQ,OAAQA,EACRI,UAAWA,UChBrBwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.76266bef.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const defUrl = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  const url = movie.imgUrl === 'N/A'\n    ? defUrl\n    : movie.imgUrl;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={url}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (movies: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies, setMovies,\n}) => {\n  const [query, setQuery] = useState<string>('');\n  const [findMovie, setFindMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const searchMovie = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n    setLoading(true);\n\n    getMovie(query)\n      .then(res => {\n        if ('Error' in res) {\n          setErrorMessage(true);\n\n          return;\n        }\n\n        const newMovie: Movie = {\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: res.Poster,\n          imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n          imdbId: res.imdbID,\n        };\n\n        setFindMovie(newMovie);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const reset = () => {\n    setQuery('');\n    setFindMovie(null);\n  };\n\n  const addMovie = () => {\n    if (!findMovie) {\n      return;\n    }\n\n    if (movies.find(movie => movie.imdbId === findMovie.imdbId)) {\n      reset();\n\n      return;\n    }\n\n    setMovies([...movies, findMovie]);\n    reset();\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': errorMessage },\n              )}\n              value={query}\n              onChange={event => {\n                setQuery(event.target.value);\n                setErrorMessage(false);\n              }}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': loading },\n              )}\n              disabled={query === ''}\n              onClick={searchMovie}\n            >\n              {!findMovie ? (\n                'Find a movie'\n              ) : (\n                'Search again'\n              )}\n            </button>\n          </div>\n\n          {findMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {findMovie !== null && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={findMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=ef59effd';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}